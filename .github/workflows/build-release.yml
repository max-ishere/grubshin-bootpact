name: "Build release"
on:
  push:
    branches: main
    tags: v*.*.*
  pull_request:
    branches: main
    
permissions:
  contents: write
jobs:
  build:
    runs-on: ubuntu-latest
    name: Build a release preview
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install Nix
      uses: cachix/install-nix-action@v27
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Build a release
      run: nix build .#_ci.release
    - name: Create a ZIP package
      id: zip
      run: |
        ref="${{github.ref_name}}"
        ref="${ref//\//.}"
        echo "::debug::Git ref resolved to slashless '$ref'"

        release="grubshin-bootpact-$ref"
        cp -rL result "$release"
        echo "::debug::Created a dereferenced release directory '$release'"

        artefact="grubshin-bootpact-$ref.zip"
        zip -r "$artefact" "$release"
        echo "::debug::Generated release artefact '$artefact'"

        echo "artefact=$artefact" >> "$GITHUB_OUTPUT"
        echo "::debug::Release artefacts saved to step outputs"

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: ${{ github.ref_name }} Release 
        tag_name: ${{ github.ref_name }}
        draft: ${{ !startsWith(github.ref, 'refs/tags/') }}
        prerelease: ${{ contains(github.ref_name, '-rc.') }}
        generate_release_notes: true
        fail_on_unmatched_files: true
        files: |
          ${{ steps.zip.outputs.artefact }}
        body: |
          # Version ${{ github.ref_name }} Released!

          <p align="center">
            View the large images at
            <a href="https://github.com/max-ishere/grubshin-bootpact/blob/${{ github.sha }}/SHOWCASE.md#screenshots">
              SHOWCASE.md
            </a>
          </p>

          <table>
          <tr>
            <th>
              <img src="https://github.com/max-ishere/grubshin-bootpact/blob/${{ github.sha }}/screenshots/teleport-night-720.png"/>
            </th><th>
              <img src="https://github.com/max-ishere/grubshin-bootpact/blob/${{ github.sha }}/screenshots/classic-night-720.png" />
            </th>
          </tr><tr>
            <th>
              <img src="https://github.com/max-ishere/grubshin-bootpact/blob/${{ github.sha }}/screenshots/teleport-day-720.png" />
            </th><th>
              <img src="https://github.com/max-ishere/grubshin-bootpact/blob/${{ github.sha }}/screenshots/classic-day-720.png" />
            </th>
          </tr><tr>
            <th>
              <img src="https://github.com/max-ishere/grubshin-bootpact/blob/${{ github.sha }}/screenshots/teleport-abyss-720.png" />
            </th><th>
              <img src="https://github.com/max-ishere/grubshin-bootpact/blob/${{ github.sha }}/screenshots/classic-abyss-720.png" />
            </th>
          </tr>
          </table>

          ## Installation

          Here is the TLDR of the installation instructions ([Full instuctions](https://github.com/max-ishere/grubshin-bootpact/blob/${{ github.sha }}/INSTALLATION.md)):

          - Download the release zip (`${{ steps.zip.outputs.artefact }}`). It contains all the variants of the theme.
          - Unzip and copy the variant you like to `/boot/grub/themes/grubshin-bootpact`.

          > [!IMPORTANT]
          > Make sure that after the theme is copied `theme.txt` is in 
          > `/boot/grub/themes/grubshin-bootpact/theme.txt`. Otherwise GRUB will not be able to find it.

          - Add this to `/etc/default/grub`:

            ```
            GRUB_THEME="/boot/grub/themes/grubshin-bootpact/theme.txt"
            ```

          If its your first time installing see the full instructions using the link above.

          > [!TIP]
          > You can install multiple variants of the theme but only 1 can be active. Select the variant by
          > changing the `GRUB_THEME` variable in `/etc/default/grub`

          ## Release notes

          View the detailed release notes in the linked discussion (Join Discussion button below).

    - name: Attach a discussion to a release
      if: startsWith(github.ref_name, '/refs/tags/')
      run: gh release edit --discussion-category "Announcements" ${{ github.ref_name }}
